<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://fluttermiddlepodcast.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://fluttermiddlepodcast.github.io/" rel="alternate" type="text/html" /><updated>2025-01-29T01:06:48+03:00</updated><id>https://fluttermiddlepodcast.github.io/feed.xml</id><title type="html">Flutter Developer Talks</title><subtitle>A (nearly) no-css minimalist Jekyll theme.
</subtitle><author><name>Riccardo Graziosi</name></author><entry><title type="html">StackOverflow загибается?</title><link href="https://fluttermiddlepodcast.github.io/post/2025/01/11/stackoveflow-%D0%B7%D0%B0%D0%B3%D0%B8%D0%B1%D0%B0%D0%B5%D1%82%D1%81%D1%8F.html" rel="alternate" type="text/html" title="StackOverflow загибается?" /><published>2025-01-11T00:00:00+03:00</published><updated>2025-01-11T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2025/01/11/stackoveflow-%D0%B7%D0%B0%D0%B3%D0%B8%D0%B1%D0%B0%D0%B5%D1%82%D1%81%D1%8F</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2025/01/11/stackoveflow-%D0%B7%D0%B0%D0%B3%D0%B8%D0%B1%D0%B0%D0%B5%D1%82%D1%81%D1%8F.html">&lt;p&gt;&lt;img src=&quot;/assets/posts/2025-01-11.png&quot; width=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/372&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/hopeseekr&quot;&gt;Теодор Смит&lt;/a&gt; (скорее всего, имя вам ни о чем не скажет),
опубликовал &lt;a href=&quot;https://gist.github.com/hopeseekr/f522e380e35745bd5bdc3269a9f0b132&quot;&gt;Gist&lt;/a&gt;, в котором показал количество
новых вопросов на StackOverflow в период с его появления по настоящий момент. И… Статистика довольно плачевная -
падение новых вопросов за год составило около 70%, что довольно много.&lt;/p&gt;

&lt;p&gt;Автор делает акцент на том, что причиной падения интереса является AI (ChatGPT, например), и я с ним согласен - гораздо
проще общаться с ассистентом, который знает контекст твоего запроса, нежели чем пытаться что-то объяснить кому-то на
другом конце мира, что у тебя там не работает. Зачастую ответы нужны сразу, без ожидания.&lt;/p&gt;

&lt;p&gt;Но тут есть еще один момент, который показывает зависимость всех AI-ассистентов от StackOverflow и прочих подобных
ресурсов - они берут оттуда информацию. Чем меньше новой информации (а языки программирования обновляются довольно
часто), тем меньше релевантных подсказок AI-ассистенты будут давать. Вот и получается, что для обучения AI нужны вопросы
и ответы, а этим заниматься мало кто хочет (если судить по статистике из Гиста выше). Получается замкнутый круг - когда
без одного не может быть другого (точнее, может, но с оговорками).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;На скриншоте - размышления по поводу токсичности комьюнити StackOverflow, ну и некоторые другие моменты. Не думаю, что
это как-то могло повлиять на снижение популярности платформы, ибо резкое падение появления новых вопросов пошло совсем
недавно, а вопросики по общению были уже давно.&lt;/em&gt;&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html"></summary></entry><entry><title type="html">Flutter + Ruby / Rails</title><link href="https://fluttermiddlepodcast.github.io/post/2025/01/08/flutter-ruby-rails.html" rel="alternate" type="text/html" title="Flutter + Ruby / Rails" /><published>2025-01-08T00:00:00+03:00</published><updated>2025-01-08T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2025/01/08/flutter-ruby-rails</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2025/01/08/flutter-ruby-rails.html">&lt;p&gt;&lt;img src=&quot;/assets/posts/2025-01-08.jpg&quot; width=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/371&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Немного дополнительной информации про мой стек.&lt;/p&gt;

&lt;p&gt;О том, что использую для разработки приложений (теперь уже и не только мобильных) рассказывал тут и тут.&lt;/p&gt;

&lt;p&gt;Но в работе (и личных проектах тоже) часто требуется бэкенд и дополнительная инфраструктура (скрипты, например). Тут на
сцену и выходит &lt;a href=&quot;http://ruby-lang.org/en&quot;&gt;Ruby&lt;/a&gt; / &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby on Rails&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Начал писать на нем в 2018-2019 году на первой работе. Требовалось написать небольшую CLI-программу для проверки
структуры проекта, версионирования нативных плагинов да и кучи мелких нюансов по нашим внутренним проектам.&lt;/p&gt;

&lt;p&gt;Изначально думали делать это все на Дарте, чтобы не менять язык программирования, но оказалось, что парсить
.podspec-файлы на iOS и работать с &lt;a href=&quot;https://gradle.com/&quot;&gt;Gradle&lt;/a&gt; просто так нельзя. Для первого можно было использовать
Руби (&lt;a href=&quot;https://cocoapods.org/&quot;&gt;подсы&lt;/a&gt; написаны на нем), а вот для второго ничего нормального не нашлось (мы не
мигрировали с &lt;a href=&quot;http://groovy-lang.org/&quot;&gt;Groovy&lt;/a&gt; так как &lt;a href=&quot;https://kotlinlang.org/&quot;&gt;Kotlin DSL&lt;/a&gt; тогда вроде только начали
завозить в Грейдл, и насколько нам это было нужно (даже не на нативе), было не понятно).&lt;/p&gt;

&lt;p&gt;В итоге взяли Руби, так как возиться с iOS не хотелось, а для Грейдла все равно пришлось бы что-то городить, и обошлись
небольшим плагином, который отдает информацию в JSON’е, и Руби его потом парсит и обрабатывает как нам нужно.&lt;/p&gt;

&lt;p&gt;Сам язык довольно специфичный, и синтаксис после Java/Kotlin/Dart заставляет пройти хотя бы базис по разработке на нем,
но это в итоге того стоит. Как минимум, нам удалось сделать решение, которое уже пару лет концептуально не меняется и
работает для внутренних проектов на моей первой работе.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ruby on Rails&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Руби известен большенству благодаря Рельсам. Это чуть ли не самый популярный Full-Stack-фреймворк для разработки
вэб-приложений. Позволяет писать как бэкенд, так и фронтенд.&lt;/p&gt;

&lt;p&gt;Я пишу на Rails только бэкенд, без фронтовой части (так тоже можно). Это просто API для личных и немного коммерческих
проектов, связь приложений и сервера с базой данных.&lt;/p&gt;

&lt;p&gt;За счет скорости разработки, бэк поднимается за очень короткий промежуток времени. Рельсы очень сильно полагаются на
соглашения, и стоит просто следовать инструкции для написания своих программ - все уже придумали за тебя.&lt;/p&gt;

&lt;p&gt;Писать бэкенд становится проще, когда ты знаешь, что ожидает от него приложение. Изначально казалось, что я буду плавать
не только в Рельсах, но и в написании бэка впринципе. Но оказалось, что это гораздо проще, чем кажется на первых
взгляд - простенький &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; получается за несколько часов,
и это с учетом всех возможных состояний и ошибок.&lt;/p&gt;

&lt;p&gt;Это не истина в последней инстанции, вы можете выбрать любое решение, которое позволить реализовать именно то, что
нужно. Смотрите на многие вещи не только под углом популярности, даже сформированные и устоявшиеся решения порой в
перспективе выигрывают у своих молодых конкурентов.&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html"></summary></entry><entry><title type="html">Блог на Jekyll</title><link href="https://fluttermiddlepodcast.github.io/post/2025/01/03/%D0%B1%D0%BB%D0%BE%D0%B3-%D0%BD%D0%B0-jekyll.html" rel="alternate" type="text/html" title="Блог на Jekyll" /><published>2025-01-03T00:00:00+03:00</published><updated>2025-01-03T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2025/01/03/%D0%B1%D0%BB%D0%BE%D0%B3-%D0%BD%D0%B0-jekyll</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2025/01/03/%D0%B1%D0%BB%D0%BE%D0%B3-%D0%BD%D0%B0-jekyll.html">&lt;p&gt;&lt;img src=&quot;/assets/posts/2025-01-03.jpg&quot; width=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/369&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🔗 &lt;strong&gt;https://fluttermiddlepodcast.github.io&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;У подкаста появился отдельный сайт с постами.&lt;/p&gt;

&lt;p&gt;Была идея сделать что-то подобное на Flutter, но в какой-то момент это оказалось оверхедом. Если есть уже готовое просто
решение, но на другой платформе/технологии, почему бы его не использовать?&lt;/p&gt;

&lt;p&gt;Поскольку я давно работаю с Ruby, и встречал достаточно сайтов/блогов, которые написаны на Jekyll, то решил попробовать
его.&lt;/p&gt;

&lt;p&gt;Посты переносил несколько недель по 2 штуки в день. Типо утренний ритуал такой, наравне с решением задач на LeetCode.&lt;/p&gt;

&lt;p&gt;Jekyll генерирует статический контент из Markdown, это очень облегчает работу с постами, а популярность решения
позволяет хостить его на &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; бесплатно (с регистрацией, правда, но без СМС), так
как это в итоге просто готовый HTML с текстом.&lt;/p&gt;

&lt;p&gt;Единственное, что не учел - GitHub Pages позволяют использовать ограниченный набор тем для Jekyll. Сейчас блог выглядит
не так, как хотелось бы. Зайдите и посмотрите сами, а на скриншоте тот вариант, который планировался изначально.&lt;/p&gt;

&lt;p&gt;В целом, посмотрим, насколько приживется. Если раньше я думал, что посты достаточно большие, то сейчас понимаю, что
большие они только для Телеграма. При просмотре контента на сайте публикации больше кажутся заметками, нежели постами.
Посты будут и в Телеграме, и в блоге, так что смотрите на то, где вам удобнее читать мои заметки.&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html"></summary></entry><entry><title type="html">GitHub 2024 Wrapped</title><link href="https://fluttermiddlepodcast.github.io/post/2025/01/01/github-2024-wrapped.html" rel="alternate" type="text/html" title="GitHub 2024 Wrapped" /><published>2025-01-01T00:00:00+03:00</published><updated>2025-01-01T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2025/01/01/github-2024-wrapped</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2025/01/01/github-2024-wrapped.html">&lt;p&gt;&lt;img src=&quot;/assets/github/2024_wrapped_personal.png&quot; width=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/367&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/frezycode/514&quot;&gt;👉 Спасибо Стасу Ильину за пост со статистикой&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Первое изображение - мои личные итоги&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Активности было раза в 2 меньше, чем годом ранее (где около 5000 коммитов). Связано это с тем, что нового ничего я почти
не изучал, пет-проекты не начинал, в основном выполнял задачи на ЛитКоде, добавлял небольшие фичи и правил баги в уже
существующих проектах.&lt;/p&gt;

&lt;p&gt;На работе у нас внутренний репозиторий (даже не вспомню, был ли вообще когда-то GitHub или публичный GitLab), так что
все, что в статистике - личные проекты.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;И да, в топе языков у меня Ruby. Он жив, Рельсы тоже. Как ни странно, Flutter это первая технология, на которой у меня
мало личных проектов, но в то же время куча публичной информации :)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/github/2024_wrapped_podcast.png&quot; width=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Второе изображение - итоги репозитория подкаста&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Коммитов мало, но они есть благодаря моему неожиданному желанию летом делать контент про BLoC. Это и ваша заслуга тоже,
если бы видео и остальные материалы никто не смотрел/слушал/читал, то репозитория даже в таком виде не было бы.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://git-wrapped.com/&quot;&gt;🔥 Посмотреть на свой 2024 год на GitHub&lt;/a&gt;&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html"></summary></entry><entry><title type="html">С наступающим Новым годом!</title><link href="https://fluttermiddlepodcast.github.io/post/2024/12/31/%D1%81-%D0%BD%D0%B0%D1%81%D1%82%D1%83%D0%BF%D0%B0%D1%8E%D1%89%D0%B8%D0%BC-%D0%BD%D0%BE%D0%B2%D1%8B%D0%BC-%D0%B3%D0%BE%D0%B4%D0%BE%D0%BC.html" rel="alternate" type="text/html" title="С наступающим Новым годом!" /><published>2024-12-31T00:00:00+03:00</published><updated>2024-12-31T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2024/12/31/%D1%81-%D0%BD%D0%B0%D1%81%D1%82%D1%83%D0%BF%D0%B0%D1%8E%D1%89%D0%B8%D0%BC-%D0%BD%D0%BE%D0%B2%D1%8B%D0%BC-%D0%B3%D0%BE%D0%B4%D0%BE%D0%BC</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2024/12/31/%D1%81-%D0%BD%D0%B0%D1%81%D1%82%D1%83%D0%BF%D0%B0%D1%8E%D1%89%D0%B8%D0%BC-%D0%BD%D0%BE%D0%B2%D1%8B%D0%BC-%D0%B3%D0%BE%D0%B4%D0%BE%D0%BC.html">&lt;p&gt;&lt;img src=&quot;/assets/posts/2024-12-31.jpg.jpg&quot; width=&quot;720&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/366&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;От лица Flutter Developer Talks (в лице одного меня и одного мопса) хочу от всего сердца пожелать вам частья, здоровья,
интересных проектов и меньше скучных и неинтересных рабочих моментов!&lt;/p&gt;

&lt;p&gt;Больше ясностей, четких целей, и всего самого наилучшего!&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html"></summary></entry><entry><title type="html">Что мне дало собственное приложение с открытыми исходным кодом</title><link href="https://fluttermiddlepodcast.github.io/post/2024/11/04/%D1%87%D1%82%D0%BE-%D0%BC%D0%BD%D0%B5-%D0%B4%D0%B0%D0%BB%D0%BE-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81-%D0%BE%D1%82%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D0%BC-%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%BC-%D0%BA%D0%BE%D0%B4%D0%BE%D0%BC.html" rel="alternate" type="text/html" title="Что мне дало собственное приложение с открытыми исходным кодом" /><published>2024-11-04T00:00:00+03:00</published><updated>2024-11-04T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2024/11/04/%D1%87%D1%82%D0%BE-%D0%BC%D0%BD%D0%B5-%D0%B4%D0%B0%D0%BB%D0%BE-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81-%D0%BE%D1%82%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D0%BC-%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%BC-%D0%BA%D0%BE%D0%B4%D0%BE%D0%BC</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2024/11/04/%D1%87%D1%82%D0%BE-%D0%BC%D0%BD%D0%B5-%D0%B4%D0%B0%D0%BB%D0%BE-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81-%D0%BE%D1%82%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D0%BC-%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D1%8B%D0%BC-%D0%BA%D0%BE%D0%B4%D0%BE%D0%BC.html">&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/351&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Продолжение &lt;a href=&quot;https://t.me/fluttermiddlepodcast/350&quot;&gt;поста про умение вовремя завершать проекты&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;❓ &lt;strong&gt;Ниже будет список того, что я получил за 4+ года работы над собственным приложением&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1️⃣ &lt;strong&gt;Опыт работы с Google Play и другими сторами&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Если публикация приложения кажется для вас сложной задачей - вам кажется. Рано или поздно придется начать работать с
отзывами, изменениями правил сторов, отменами выпусков новых версий приложения, удалениями проектов из магазинов.&lt;/p&gt;

&lt;p&gt;Мне приходилось заполнять формы работы с персональными данными (была локальная БД + аналитика Firebase), хотя я в этом
не особо шарил (зато пригодилось потом на одном из проектов на работе). Не самый интересный процесс, зато можно узнать
много нового.&lt;/p&gt;

&lt;p&gt;Общаться с пользователями и объяснять им, как, что и где им искать (в Google Play рядом какое-то время красавалось 2
отзыва типа “Не могу понять, как пользоваться приложением” и “Самое удобное из всех имеющихся приложений). Порой фидбека
нет вообще, и приходится надеятся, что 1 звезда без комментария хоть как-то, но приобретет облик даже небольшого
отзыва (не все пользователи дают уточнения).&lt;/p&gt;

&lt;p&gt;Запускал A/Б-тесты с разными скриншотами/описанием и наблюдал, с каким оформлением пользователи чаще выбирают
приложение. Не сказал бы, что тут выступал в роли продакта или аналитика, но было интересно наблюдать, как скриншоты с
темной темой повышают скачивания на пару процентов (в отличии от светлой).&lt;/p&gt;

&lt;p&gt;Как-то раз даже пришлось обновлять политику конфиденциальности, когда приложение было удалено из Google Play (делал это
на сеансе первого Венома, старался не отвлекаться на обновление почты в надежде получить одобрение стора). В какой-то
момент я даже подумал, что вообще не разблокируют, благо робот вернул приложение обратно.&lt;/p&gt;

&lt;p&gt;Искал альтернативные варианты размещения - до 2022 года все аналоги Google Play не приносили пользователей от слова
совсем, так что остановился в итоге на связке Google Play / GitHub Releases. Тут больше даже история про то, где можно
искать новых юзеров, и есть ли в этом смысл.&lt;/p&gt;

&lt;p&gt;2️⃣ &lt;strong&gt;Коммьюнити&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Каким бы маленьким не было мое приложение, у него появились пользователи. Часть из них предлагала новые фичи, кто-то
помогал с переводами, и даже нашлись контрибьюторы! Да, кто-то просто взял, и начал помогать мне делать приложение,
причем бесплатно. Это поспособствовало появлению некоторых фич, ну и позволило ребятам внести вклад в хоть небольшое, но
опубликованное приложение.&lt;/p&gt;

&lt;p&gt;Архитектура и в целом кодовая база оставляла желать лучшего, но может быть простота (UI и бизнес мешался только так)
позволили сделать вход в разработку более легким, а дальнейший переход на что-то более-менее внятное лишь добавил новых
контрибьюторов.&lt;/p&gt;

&lt;p&gt;Это так же позволило выстроить процессы работы с проектом. CI/CD-пайплайны, оформление пулл реквестов, возможность самим
выбирать ишью - это лишь часть социалки, которую вы получите и над которой попрактикуетесь во время работы над опен
сорсом.&lt;/p&gt;

&lt;p&gt;В один момент это немного надоело, ибо вопросов было больше, чем времени у меня на их ответы, но дополнительно к этому я
научился приоритизировать задачи и выбирать только самое нужное/действительно важное в данный момент.&lt;/p&gt;

&lt;p&gt;3️⃣ &lt;strong&gt;Плацдарм для новых идей и экспериментов&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/22&quot;&gt;В выпуске про пет-проекты&lt;/a&gt; я говорил, что если нужна какая-то практика, а на
работее ее нет - можно попробовать реализовать что-то на собственном проекте.&lt;/p&gt;

&lt;p&gt;Меня всегда интересовали CI/CD-пайплайны, автоматизация, ну и в целом выстраивание процессов работы над проектом. И за 4
года я перепробовал несколько вариантов того, а что вообще может происходить с кодом при коммитах или подготовках к
публикации.&lt;/p&gt;

&lt;p&gt;Я пробовал новые библиотеки, мог играться с архитектурой, сравнивать выбранные подходы с тем, что имелось на рабочих
проектах. Пытался найти оптимальный вариант работы с проектами для себя - это позволило понять, что действительно нужно
и важно, а что можно оставить на потом или делать иначе, чем я уже привык реализовывать.&lt;/p&gt;

&lt;p&gt;Интервью в некоторые компании проходились проще как раз благодаря тому, что задачи, которых не хватало на работе, можно
было делать на вполне нормальном проекте, и результат даже не был спрятан за ширмой NDA, что позволяло его показывать в
любой удобный момент времени.&lt;/p&gt;

&lt;p&gt;4️⃣ &lt;strong&gt;Строчка в резюме&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Поскольку сейчас я не Android-разработчик, то на собеседованиях уделяю этой истории пару минут, дабы как-то дополнить
свой опыт работы с Android. Но раньше довольно много рассказывал про приложение, что с ним в данный момент времени, ну и
в целом говорил о процессах и том, что мне удалось реализовать.&lt;/p&gt;

&lt;p&gt;5️⃣ &lt;strong&gt;Отклик в самом себе&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Пока не попробуешь - не узнаешь. Если бы не начал делать свое приложение 4 года назад, то делал бы сейчас.&lt;/p&gt;

&lt;p&gt;Open Source мне импонирует, и зайти в него через собственный проект оказалось более проще, чем через сторонние продукты.&lt;/p&gt;

&lt;p&gt;Если у тебя мало опыта, то сторонний OS кажется чем-то недосягаемым, в то время собственные проекты можно делать сразу и
как угодно. В процессе улучшения кода и построения небольшого сообщества станет ясно, насколько вам нужно залазить в код
после работы и тратя на него свое время.&lt;/p&gt;

&lt;p&gt;Каждый проект уникален. Я обходился без монетизации, и какое-то время ехал на голом энтузиазме, но оглядываясь назад не
жалею, что мысли рекламы или подписки не взяли верх над внутренними желаниями просто сделать классное и хорошее
приложение.&lt;/p&gt;

&lt;p&gt;Но это не говорит о том, что все нужно делать ради идеи. Деньги - отличная мотивация заниматься любимым делом. Быть
может наличие монетизации добавит вам дополнительный стимул работать над собственным проектом, а в будущем даже поможет
продукту стать основной или существенной статьей личного дохода.&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html">Читать в Telegram</summary></entry><entry><title type="html">Умение вовремя завершать проекты</title><link href="https://fluttermiddlepodcast.github.io/post/2024/11/03/%D1%83%D0%BC%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%BE%D0%B2%D1%80%D0%B5%D0%BC%D1%8F-%D0%B7%D0%B0%D0%B2%D0%B5%D1%80%D1%88%D0%B0%D1%82%D1%8C-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B.html" rel="alternate" type="text/html" title="Умение вовремя завершать проекты" /><published>2024-11-03T00:00:00+03:00</published><updated>2024-11-03T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2024/11/03/%D1%83%D0%BC%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%BE%D0%B2%D1%80%D0%B5%D0%BC%D1%8F-%D0%B7%D0%B0%D0%B2%D0%B5%D1%80%D1%88%D0%B0%D1%82%D1%8C-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2024/11/03/%D1%83%D0%BC%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%BE%D0%B2%D1%80%D0%B5%D0%BC%D1%8F-%D0%B7%D0%B0%D0%B2%D0%B5%D1%80%D1%88%D0%B0%D1%82%D1%8C-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B.html">&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/350&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;С 2019 года я занимался разработкой и поддержкой собственного небольшого открытого нативного Android-приложения. Это был
мой маленький плацдарм для новых идей и исследований, как с технической, так и с управленческой позиции.&lt;/p&gt;

&lt;p&gt;Более двух лет (до перехода на Flutter) я плодотворно работал как над улучшениями самого проекта, так и над его
распространением (А/Б-тесты в сторах, альтернативные магазины приложений, форумы).&lt;/p&gt;

&lt;p&gt;Не то, чтобы именно Flutter все испортил. Нет, это одна из, но не основная причина. Само приложение стало законченным
через полтора года развития, и фичи делались просто ради того, чтобы хоть как-то показывать развитие. Но это было и не
нужно. Так совпало, что у меня получилось перейти на Flutter, и натив уже был не интересен.&lt;/p&gt;

&lt;p&gt;И вот с того момента я что только не пробовал ради сохранения концепции и идеи - рефакторил проект для облегчения работы
с ним (первоначально там вообще не было архитектуры), пытался заставлять себя заниматься им на выходных, даже была мысль
переписать его на Flutter.&lt;/p&gt;

&lt;p&gt;Но ничего не доводилось до конца - количество предложений и баг-репортов росло, и это вгоняло в тоску. Я не могу просто
так взять, и забить на просьбы пользователей - так что постоянно кормил их завтраками (которые постоянно откладывались
на месяцы). Если раньше разработка новой версии занимала пару недель максимум - то последняя итерация длилась полтора
года, из которых около нескольких месяцев я просто не мог все перепроверить и нажать кнопку влития. Некоторые
контрибьюторы ждали аппрува несколько месяцев, что тоже меня очень сильно беспокоило (я и сам периодически что-то
куда-то коммичу, и прекрасно их понимаю).&lt;/p&gt;

&lt;p&gt;Наконец, пару дней назад, я прекратил поддержку приложения. Выкатил последний релиз, закрыл все репорты, обновил
документацию, и… Стало НАМНОГО легче! Я прошел с приложением несколько смен работы, получил опыт работы с UI/UX,
отзывами, сторами, автоматизациями, и на каждом собеседовании рассказываю про свой небольшой проект, и считаю его важным
моментом моего развития как разработчика.&lt;/p&gt;

&lt;p&gt;Нужно уметь вовремя заканчивать проекты, и не только личные. Вовремя зафиналенные истории избавляют от лишних
переживаний, и помогают не тратить много сил и времени впустую на то, что уже не актуально. Разработка - это постоянное
движение. Мы меняем работы, адаптируемся к новым требованиям. И как бы плохо это не звучало - иногда даже хорошие
проекты нужно завершать вовремя.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S: Если вдруг я захочу снова заниматься этим приложением, то я уже с новыми силами начну работать с багами и
запросами фичей. Без выгораний и постоянного чувства нервозности от ответсвенности.&lt;/em&gt;&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html">Читать в Telegram</summary></entry><entry><title type="html">Flock. Мое мнение</title><link href="https://fluttermiddlepodcast.github.io/post/2024/10/29/flock-%D0%BC%D0%BE%D0%B5-%D0%BC%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5.html" rel="alternate" type="text/html" title="Flock. Мое мнение" /><published>2024-10-29T00:01:00+03:00</published><updated>2024-10-29T00:01:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2024/10/29/flock-%D0%BC%D0%BE%D0%B5-%D0%BC%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2024/10/29/flock-%D0%BC%D0%BE%D0%B5-%D0%BC%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5.html">&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/349&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Разработка, а уж тем более поддержка фреймворка - это очень затратная история. Крупные компании могут себе позволить
такое, но после ряда эксперементов все равно возвращаются к истокам (либо же пытаются вернуться). Похожий случай был с
Ruby On Rails, когда его форкали и потом пытались поддерживать за свои деньги и время разработчиков (хотя изначально
казалось, что игра стоит свеч).&lt;/p&gt;

&lt;p&gt;Flutter - это еще и Dart, который делает Гугл. За последние годы язык обретает фичи, которые исходят из потребностей
Flutter-разработчиков, не стоит забывать и про это. Разработка языка программирования, куда более сложная история,
нежели поддержка фреймворка, написанного на нем.&lt;/p&gt;

&lt;p&gt;Какими бы медленными и непонятными были процессы влития MR’ов и работой с issues, такая ситуация почти в каждом большом
Open Source-проекте, и дело тут даже не в сокращениях - большие проекты аффектят много людей и компаний, и нужны доводы
для изменений кода, влияющий на тысячи приложений.&lt;/p&gt;

&lt;p&gt;Сторонний форк на первых порах будет предлагать уже проверенные кем-то фичи, что может помочь в развитии Флаттера. Но
откуда нам знать, что контрибьюторы делат 100% рабочие фичи и что это не повлияет на пользователей? А если даже это все
сработает, неужели Гуглу (и нам) будут нужны все фичи, которые добавили во Flock?&lt;/p&gt;

&lt;p&gt;Ну и в целом, Гугл не настолько тираны, чтобы игнорировать вообще все - сообщество влияет на Flutter, и 1447
контрибьюторов тому подтверждение (не все же там сотрудники Google, так?).&lt;/p&gt;

&lt;p&gt;Эта история кажется какой-то непонятной. Быть может автор соберет команду единомышленников, и они действительно смогут
работать с Гуглом, но пока что в это не верится.&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html">Читать в Telegram</summary></entry><entry><title type="html">Flock</title><link href="https://fluttermiddlepodcast.github.io/post/2024/10/29/flock.html" rel="alternate" type="text/html" title="Flock" /><published>2024-10-29T00:00:00+03:00</published><updated>2024-10-29T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2024/10/29/flock</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2024/10/29/flock.html">&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/348&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Тут Flutter форкнули, и называется вся эта история
&lt;a href=&quot;https://flutterfoundation.dev/blog/posts/we-are-forking-flutter-this-is-why/&quot;&gt;Flock&lt;/a&gt;. Это НЕ замена Флаттера, а
отдельный проект для более быстрого развития платформы.&lt;/p&gt;

&lt;p&gt;📝 &lt;strong&gt;Основные тезисы (по словам автора)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1️⃣ &lt;strong&gt;Flutter’s labor shortage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Или нехватка разработчиков. Типа над фреймворком работает где-то 50 человек, и очень много из них занимается AI, вместо
поддержки платформ. Количество сотрудников Гугл не оглашает, но похоже на правду (&lt;a href=&quot;https://t.me/fluttermiddlepodcast/204&quot;&gt;учитывайте еще недавние
сокращения&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;2️⃣ &lt;strong&gt;The cost of limited labor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Головная боль части сообщества - медленные исправления багов в движке/инструментах разработчика. Один мой тикет вроде бы
висит с 2020 года, и там есть комментарии, что проблема имеется, но, видимо, пока не в приоритете (корявые отчеты
тестов, это не самое важное). Примеров более важных проблем тоже хватает, и если смотреть на первый пункт (где про AI),
то в голове что-то начинает вырисовываться.&lt;/p&gt;

&lt;p&gt;3️⃣ &lt;strong&gt;The Flutter community can help with labor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Сообщество может помочь движку и платформе развиваться, нас действительно очень много. Если в целом
Flutter-программистов больше миллиона по всему миру, то готовых разрабатывать платформу будет как минимум 1000 человек.&lt;/p&gt;

&lt;p&gt;❗ &lt;strong&gt;Почему бы просто не помогать команде Flutter’а в едином репозитории?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Автор считает, что довольно много нюансов не позволяет вести разработку на ресурсах Гугла, и к тому же за счет
разработчиков и непонятных процессов не удается вовремя решать скопившиеся проблемы. Вот поэтому он и решил сделать свой
форк, дабы помочь Гуглу ускорить процесс разработки фреймворка.&lt;/p&gt;

&lt;p&gt;Мое же мнение в &lt;a href=&quot;https://t.me/fluttermiddlepodcast/349&quot;&gt;посте ниже&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;👉 Ссылка &lt;a href=&quot;https://flutterfoundation.dev/blog/posts/we-are-forking-flutter-this-is-why/&quot;&gt;тут&lt;/a&gt;
👉 Reddit &lt;a href=&quot;https://www.reddit.com/r/FlutterDev/comments/1gebnd1/were_forking_flutter_this_is_why/&quot;&gt;тут&lt;/a&gt;&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html">Читать в Telegram</summary></entry><entry><title type="html">Как я входил в разработку</title><link href="https://fluttermiddlepodcast.github.io/post/2024/10/27/%D0%BA%D0%B0%D0%BA-%D1%8F-%D0%B2%D1%85%D0%BE%D0%B4%D0%B8%D0%BB-%D0%B2-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D1%83.html" rel="alternate" type="text/html" title="Как я входил в разработку" /><published>2024-10-27T00:00:00+03:00</published><updated>2024-10-27T00:00:00+03:00</updated><id>https://fluttermiddlepodcast.github.io/post/2024/10/27/%D0%BA%D0%B0%D0%BA-%D1%8F-%D0%B2%D1%85%D0%BE%D0%B4%D0%B8%D0%BB-%D0%B2-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D1%83</id><content type="html" xml:base="https://fluttermiddlepodcast.github.io/post/2024/10/27/%D0%BA%D0%B0%D0%BA-%D1%8F-%D0%B2%D1%85%D0%BE%D0%B4%D0%B8%D0%BB-%D0%B2-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D1%83.html">&lt;p&gt;&lt;a href=&quot;https://t.me/fluttermiddlepodcast/347&quot;&gt;Читать в Telegram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Наверное, целиком эту историю не рассказывал, и в догонку к предыдущему посту почему бы и не написать о том, как я
устраивался на первую работу.&lt;/p&gt;

&lt;p&gt;Во время учебы меня метало то в системное администрирование, то в разработку. С первым вариантом было чуть проще, были и
преподаватели, которые практиковали, да и в целом это казалось чем-то более легким, нежели программирование. Но в
какой-то момент начал осваивать мобильную разработку, и мне это больше понравилось, чем возиться с настройкой серверов и
пользовательских компьютеров. Остановился в итоге на разработке. Может быть писал бы под iOS, даже купил на стипендию
старый iPhone 5, но возиться с Хакинтошем не особо хотелось, а поддержка государства, пускай и повышенное в виде
президентской стипендии, на Мак мне бы не накопила.&lt;/p&gt;

&lt;p&gt;Обучали нас не разработке, отдельный поток программистов уже был, так что нужно было как-то самому пытаться хоть
куда-то, но устроиться. Как это делать, а уж тем более куда это делать, я не ведовал. Благо у нас уже были ребята,
которые куда-то устроились, и примерное представление о компаниях в городе я уже имел. Однако из-за стеснения я не мог
отправлять свое резюме всем подряд, так что приходилось писать пет-проекты и надеятся, что возможно где-то появится
вариант постажироваться или даже сразу устроиться в штат.&lt;/p&gt;

&lt;p&gt;Если говорить про то, что конкретно я делал, то проходил курс Start Android, и попутно писал небольшие приложения, дабы
сделать себе хоть какое-нибудь портфолио. Это были всякие-разные калькуляторы и TODO-листы, но потом появились и проекты
связанные с IoT, один из которых стал моим дипломным проектом. Никакого ЛитКода не было, и дай мне написать сортировку,
я бы выполнил задание с максимально медленным решением.&lt;/p&gt;

&lt;p&gt;На последнем курсе через знакомого (простая рекомендация) меня пригласили на стажировку в небольшую локальную (10
человек максимум нас вроде было) компанию. Товарищ работал там почти год iOS-разработчиком, и когда им понадобился
Android-программист, то он вспомнил меня, за что Николаю огромное спасибо! Социалка зарешала (либо же, я надеюсь, я хоть
чем-то выделился и взяли меня не потому, что больше никого не было), и я устроился стажером писать Android-приложения.&lt;/p&gt;

&lt;p&gt;Стажировка длилась 3 месяца (хотя изначально мы договаривались на 2), и документы о трудоустройстве я подписывал в
момент переезда компании из одного офиса в другой (вроде бы там был стол, и не нужно было искать твердую поверхность).
Самое фиговое чувство было в момент, когда мне еще на месяц продлили время испытательного срока, хотя мне порой кажется,
что в связи с переездом они решили чуть-чуть оптимизировать затраты и просто не платить мне еще месяц (хотя деваться мне
было не куда).&lt;/p&gt;

&lt;p&gt;Социальные связи помогают, и мой вариант входа был не самый трудный. Хотя вот первый год меня не отпускало чувство, что
будь мне замена - уволили бы и пришлось искать другое место работы)&lt;/p&gt;</content><author><name>Riccardo Graziosi</name></author><category term="post" /><summary type="html">Читать в Telegram</summary></entry></feed>